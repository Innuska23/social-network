{"version":3,"file":"static/js/782.c89243c2.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app-1/./src/components/Profile/My posts/MyPosts.module.css?16f6","webpack://my-app-1/./src/components/Profile/My posts/Post/Post.module.css?6083","components/Profile/My posts/Post/Post.jsx","utils/validators/validators.js","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://my-app-1/./src/components/common/FormsControl/FormsControl.module.css?07ef","components/common/FormsControl/FormsControl.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2mcKR\"};","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"No status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        {profile.aboutMe} <br />\r\n        {profile.fullName} <br />\r\n        {profile.contacts.facebook}\r\n        <div>\r\n          <img src={profile.photos.large} alt=\"ava\" />\r\n        </div>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__dTBef\",\"posts\":\"MyPosts_posts__kpXFC\",\"postError\":\"MyPosts_postError__XtE1H\",\"error\":\"MyPosts_error__9LK+X\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__286TB\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes-thumbnail.png\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like : {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > 30) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst MyPosts = (props) => {\r\n  const [posts, setPosts] = useState(props.posts);\r\n\r\n  let postsElement = posts?.map((p) => {\r\n    return <Post message={p.message} likes={p.likes} />;\r\n  });\r\n\r\n  const addPost = (newText) => {\r\n    const updatedPosts = [...posts, { id: posts.length + 1, message: newText }];\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <div></div>\r\n      </div>\r\n      <MyFormData addPost={addPost} />\r\n      <div className={s.posts}>{postsElement}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyFormData = (props) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, touchedFields },\r\n    trigger,\r\n  } = useForm();\r\n\r\n  let onAddPost = async (data) => {\r\n    await trigger();\r\n    if (Object.keys(errors).length === 0) {\r\n      props.addPost(data.Textarea);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onAddPost)}>\r\n      <div>\r\n        <Textarea\r\n          component={Textarea}\r\n          {...register(\"Textarea\", {\r\n            required: required,\r\n            maxLength: {\r\n              value: 30,\r\n              message: \"No more than 30 characters.\",\r\n            },\r\n          })}\r\n          className={errors.Textarea ? s.error : \"\"}\r\n        />\r\n        {touchedFields.Textarea &&\r\n          errors.Textarea &&\r\n          errors.Textarea.type === \"required\" && (\r\n            <p className={s.postError}>Textarea is required.</p>\r\n          )}\r\n        {errors.Textarea && errors.Textarea.type === \"maxLength\" && (\r\n          <p className={s.postError}>No more than 30 characters.</p>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch, state) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreator(newPost));\r\n    },\r\n    newMessageText: state.newMessageText,\r\n  };\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\n// import s from \"./Profile.module.css\";\r\n// import MyPosts from \"./My posts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  updateStatus,\r\n  getStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.router.navigate(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__sZLpi\",\"error\":\"FormsControl_error__JhzWj\"};","import React, { forwardRef } from \"react\";\r\nimport styles from \"./FormsControl.module.css\";\r\n\r\nconst FormControl = forwardRef(({ input, meta, children }, ref) => {\r\n  const hasError = meta && meta.touched && meta.error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport const Textarea = forwardRef(({ input, meta, ...restProps }, ref) => {\r\n  return (\r\n    <FormControl input={input} meta={meta} ref={ref}>\r\n      <textarea {...input} {...restProps} ref={ref} />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport const Input = forwardRef(({ input, meta, ...restProps }, ref) => {\r\n  return (\r\n    <FormControl input={input} meta={meta} ref={ref}>\r\n      <input {...input} {...restProps} ref={ref} />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default Textarea;\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","_ref","profile","className","s","aboutMe","fullName","contacts","facebook","src","photos","large","alt","ProfileStatusWithHooks","Preloader","message","likes","required","MyFormData","register","handleSubmit","reset","formState","errors","touchedFields","trigger","useForm","onSubmit","async","Object","keys","length","addPost","data","Textarea","component","maxLength","type","posts","setPosts","postsElement","map","p","Post","newText","updatedPosts","id","connect","state","profilePage","newPostText","mapDispatchToProps","dispatch","newPost","addPostActionCreator","newMessageText","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","React","componentDidMount","userId","this","router","params","autorizedUserId","navigate","getUserProfile","getStatus","render","Profile","compose","auth","isAuth","Component","location","useLocation","useNavigate","useParams","FormControl","forwardRef","ref","input","meta","hasError","touched","error","styles","_ref2","restProps","Input","_ref3"],"sourceRoot":""}