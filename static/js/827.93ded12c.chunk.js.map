{"version":3,"file":"static/js/827.93ded12c.chunk.js","mappings":"gLACA,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,MAAQ,wB,aCE9P,MASA,EAToBA,IAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAEC,OAAM,KAAAF,OAAIC,EAAEE,QAASC,UACxCN,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,GAAIV,EAAKQ,SAAET,EAAMY,QACtB,ECFV,EAJiBZ,IACRG,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAEO,QAAQJ,SAAET,EAAMc,O,aCK3C,MAgCMC,EAAiBf,IACrB,MAAM,SACJgB,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,EAAM,cAAEC,GAAe,QACpCC,IACEC,EAAAA,EAAAA,MAUJ,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUR,GATDS,gBACTJ,IAC6B,IAA/BK,OAAOC,KAAKR,GAAQS,SACtB7B,EAAM8B,WAAWC,EAAKC,UACtBd,IACF,IAIuCT,SAAA,EACrCe,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEN,EAAAA,EAAAA,KAAC6B,EAAAA,GAAQ,IACHhB,EAAS,WAAY,CACvBiB,UAAU,EACVC,UAAW,CACTC,MAAO,IACPtB,QAAS,mCAGbuB,YAAY,qBACZhC,UAAWgB,EAAOY,SAAW1B,EAAE+B,MAAQ,KAExChB,EAAcW,UACbZ,EAAOY,UACkB,aAAzBZ,EAAOY,SAASM,OACdnC,EAAAA,EAAAA,KAAA,KAAGC,UAAWE,EAAEiC,aAAa9B,SAAC,0BAEjCW,EAAOY,UAAqC,cAAzBZ,EAAOY,SAASM,OAClCnC,EAAAA,EAAAA,KAAA,KAAGC,UAAWE,EAAEiC,aAAa9B,SAAC,sCAGlCN,EAAAA,EAAAA,KAAA,OAAAM,UACEN,EAAAA,EAAAA,KAAA,UAAQmC,KAAK,SAAQ7B,SAAC,oBAEnB,EAIX,EA/EiBT,IACf,MAAOwC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS1C,EAAM2C,YAAYH,UAE3D,IAAII,EAAQ5C,EAAM2C,YAEdE,EAAsB,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOE,QAAQC,KAAKC,IAChC7C,EAAAA,EAAAA,KAAC8C,EAAU,CAACrC,KAAMoC,EAAEpC,KAAiBV,GAAI8C,EAAE9C,IAAZ8C,EAAE9C,MAGtCgD,EAAmBV,EAASO,KAAKI,IAC5BhD,EAAAA,EAAAA,KAACiD,EAAO,CAACtC,KAAMqC,EAAEtC,SAAcsC,EAAEjD,MAG1C,IAAKF,EAAMqD,OAAQ,OAAOlD,EAAAA,EAAAA,KAACmD,EAAAA,GAAQ,CAAC3C,GAAI,WAUxC,OACEa,EAAAA,EAAAA,MAAA,OAAKpB,UAAWE,EAAEwC,QAAQrC,SAAA,EACxBN,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAEiD,aAAa9C,SAAEoC,KACjC1C,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAEkC,SAAS/B,SAAEyC,KAC7B/C,EAAAA,EAAAA,KAACY,EAAa,CAACe,WAZC0B,IAClB,MAAMC,EAAkB,IACnBjB,EACH,CAAEtC,GAAIsC,EAASX,OAAS,EAAGhB,QAAS2C,IAEtCf,EAAYgB,EAAgB,MAQtB,E,aChCV,IAAIC,EAA8Bd,IAAK,CACrCS,OAAQT,EAAMe,KAAKN,SCiBrB,SAAeO,E,OAAAA,KACbC,EAAAA,EAAAA,KAjBqBjB,IACd,CACLD,YAAaC,EAAMD,YACnBmB,eAAgBlB,EAAMD,YAAYmB,mBAIbC,CAACC,EAAUpB,KAC3B,CACLqB,YAAcH,IACZE,GAASE,EAAAA,EAAAA,GAAwBJ,GAAgB,EAEnDA,eAAgBlB,EAAMkB,oBDVOK,IAC/B,MAAMC,UAA0BC,EAAAA,UAC9BC,MAAAA,GACE,OAAKC,KAAKvE,MAAMqD,QACTlD,EAAAA,EAAAA,KAACgE,EAAS,IAAKI,KAAKvE,SADIG,EAAAA,EAAAA,KAACmD,EAAAA,GAAQ,CAAC3C,GAAG,UAE9C,EAOF,OAJmCkD,EAAAA,EAAAA,IAAQH,EAARG,CACjCO,EAGiC,GCErC,CAGEI,E,iECxBF,QAA8B,kCAA9B,EAAwE,4B,aCExE,MAAMC,GAAcC,EAAAA,EAAAA,aAAW,CAAAC,EAA4BC,KAAS,IAApC,MAAEC,EAAK,KAAEC,EAAI,SAAErE,GAAUkE,EACvD,MAAMI,EAAWD,GAAQA,EAAKE,SAAWF,EAAKzC,MAC9C,OACEb,EAAAA,EAAAA,MAAA,OAAKpB,UAAW6E,EAAqB,KAAOF,EAAWE,EAAe,IAAIxE,SAAA,EACxEN,EAAAA,EAAAA,KAAA,OAAAM,SAAMA,IACLsE,IAAY5E,EAAAA,EAAAA,KAAA,QAAAM,SAAOqE,EAAKzC,UACrB,IAIGL,GAAW0C,EAAAA,EAAAA,aAAW,CAAAQ,EAAgCN,KAAS,IAAxC,MAAEC,EAAK,KAAEC,KAASK,GAAWD,EAC/D,OACE/E,EAAAA,EAAAA,KAACsE,EAAW,CAACI,MAAOA,EAAOC,KAAMA,EAAMF,IAAKA,EAAInE,UAC9CN,EAAAA,EAAAA,KAAA,eAAc0E,KAAWM,EAAWP,IAAKA,KAC7B,IAILQ,GAAQV,EAAAA,EAAAA,aAAW,CAAAW,EAAgCT,KAAS,IAAxC,MAAEC,EAAK,KAAEC,KAASK,GAAWE,EAC5D,OACElF,EAAAA,EAAAA,KAACsE,EAAW,CAACI,MAAOA,EAAOC,KAAMA,EAAMF,IAAKA,EAAInE,UAC9CN,EAAAA,EAAAA,KAAA,YAAW0E,KAAWM,EAAWP,IAAKA,KAC1B,IAIlB,G","sources":["webpack://my-app-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","webpack://my-app-1/./src/components/common/FormsControl/FormsControl.module.css?07ef","components/common/FormsControl/FormsControl.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__JHdzQ\",\"dialogsItems\":\"Dialogs_dialogsItems__UUH8K\",\"active\":\"Dialogs_active__g+5X+\",\"messages\":\"Dialogs_messages__SBuVe\",\"message\":\"Dialogs_message__OZnZ3\",\"dialogsError\":\"Dialogs_dialogsError__Go2Tn\",\"error\":\"Dialogs_error__HZRWW\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.text}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport Textarea from \"../common/FormsControl/FormsControl\";\r\n\r\nconst Dialogs = (props) => {\r\n  const [messages, setMessages] = useState(props.dialogsPage.messages);\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElement = state?.dialogs.map((d) => {\r\n    return <DialogItem name={d.name} key={d.id} id={d.id} />;\r\n  });\r\n\r\n  let messagesElements = messages.map((m) => {\r\n    return <Message text={m.message} key={m.id} />;\r\n  });\r\n\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n  const addMessage = (newMessage) => {\r\n    const updatedMessages = [\r\n      ...messages,\r\n      { id: messages.length + 1, message: newMessage },\r\n    ];\r\n    setMessages(updatedMessages);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElement}</div>\r\n      <div className={s.messages}>{messagesElements}</div>\r\n      <AddNewMessage addMessage={addMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddNewMessage = (props) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, touchedFields },\r\n    trigger,\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    await trigger();\r\n    if (Object.keys(errors).length === 0) {\r\n      props.addMessage(data.Textarea);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n        <Textarea\r\n          {...register(\"Textarea\", {\r\n            required: true,\r\n            maxLength: {\r\n              value: 1000,\r\n              message: \"No more than 1000 characters.\",\r\n            },\r\n          })}\r\n          placeholder=\"Enter your message\"\r\n          className={errors.Textarea ? s.error : \"\"}\r\n        />\r\n        {touchedFields.Textarea &&\r\n          errors.Textarea &&\r\n          errors.Textarea.type === \"required\" && (\r\n            <p className={s.dialogsError}>Textarea is required.</p>\r\n          )}\r\n        {errors.Textarea && errors.Textarea.type === \"maxLength\" && (\r\n          <p className={s.dialogsError}>No more than 1000 characters.</p>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectAuthRedirectComponent;\r\n};\r\n","import { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch, state) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    },\r\n    newMessageText: state.newMessageText,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControl_formControl__sZLpi\",\"error\":\"FormsControl_error__JhzWj\"};","import React, { forwardRef } from \"react\";\r\nimport styles from \"./FormsControl.module.css\";\r\n\r\nconst FormControl = forwardRef(({ input, meta, children }, ref) => {\r\n  const hasError = meta && meta.touched && meta.error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport const Textarea = forwardRef(({ input, meta, ...restProps }, ref) => {\r\n  return (\r\n    <FormControl input={input} meta={meta} ref={ref}>\r\n      <textarea {...input} {...restProps} ref={ref} />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport const Input = forwardRef(({ input, meta, ...restProps }, ref) => {\r\n  return (\r\n    <FormControl input={input} meta={meta} ref={ref}>\r\n      <input {...input} {...restProps} ref={ref} />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default Textarea;\r\n"],"names":["props","path","id","_jsx","className","concat","s","dialog","active","children","NavLink","to","name","message","text","AddNewMessage","register","handleSubmit","reset","formState","errors","touchedFields","trigger","useForm","_jsxs","onSubmit","async","Object","keys","length","addMessage","data","Textarea","required","maxLength","value","placeholder","error","type","dialogsError","messages","setMessages","useState","dialogsPage","state","dialogsElement","dialogs","map","d","DialogItem","messagesElements","m","Message","isAuth","Navigate","dialogsItems","newMessage","updatedMessages","mapStateToPropsForRedirect","auth","compose","connect","newMessageText","mapDispatchToProps","dispatch","sendMessage","addMessageActionCreator","Component","RedirectComponent","React","render","this","Dialogs","FormControl","forwardRef","_ref","ref","input","meta","hasError","touched","styles","_ref2","restProps","Input","_ref3"],"sourceRoot":""}